name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: List Python Files
        run: |
          files=$(git ls-files '*.py')
          echo "Python files to be checked by pylint:"
          echo "$files"
      
      - name: Run Pylint
        run: |
          files=$(git ls-files '*.py')
          if [[ -z "$files" ]]; then
            echo "No Python files found to lint."
            exit 0
          fi

          output=$(pylint $files 2>&1) || true  # Allow pylint to fail without stopping the script
          echo "$output"  # Print pylint output to the console

          score=$(echo "$output" | grep "Your code has been rated" | awk '{print $7}' | tr -d '/')
          
          if [[ -z "$score" ]]; then
            echo "Failed to parse pylint score."
            exit 1
          fi

          echo "Pylint score: $score"
          if (( $(echo "$score < 8.0" | bc -l) )); then
            echo "Pylint score is below 8.0, failing the build."
            exit 1
          fi